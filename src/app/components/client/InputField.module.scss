@import "../../tokens";

.input,
.comboBox {
  background: $color-white;
  display: flex;
  flex-direction: column;
  position: relative;

  .inputFieldWrapper {
    position: relative;
  }

  .floatingLabel {
    background: $color-white;
    border-radius: $border-radius-sm;
    color: $color-black;
    display: inline-block;
    left: $spacing-md;
    line-height: 1em;
    padding: 0 calc($spacing-xs * 0.5);
    pointer-events: none;
    position: absolute;
    top: 50%;
    transform-origin: top left;
    transform: translateY(-50%) scale(1);
    transition: transform 0.2s ease-in-out;
    user-select: none;
  }

  .inputField {
    border: 1px solid $color-grey-30;
    border-radius: $border-radius-sm;
    color: $color-black;
    // Add a bit more vertical space: The next spacing step is too much.
    padding: calc($spacing-sm * 1.5) $spacing-md;
    width: 100%;

    &.noValue {
      color: $color-grey-40;
    }

    &.hasError {
      border-color: $color-error;

      &:focus {
        border: 1px solid $color-error;
        outline: $border-focus-width solid $color-error-focus;
      }
    }

    &:focus {
      border: 1px solid $color-informational-active;
      outline: $border-focus-width solid $color-informational-focus;
    }

    &:disabled {
      background: none;
      border: 1px solid $color-grey-10;
    }
  }

  &:has(.floatingLabel) {
    &::placeholder {
      @include visually-hidden;
    }

    .inputField {
      padding: $spacing-md;
    }
  }

  &:focus-within,
  &:not(:has(:placeholder-shown)) {
    &:has(.floatingLabel) {
      .inputField {
        padding: calc($spacing-md + $spacing-sm) $spacing-md $spacing-sm;
      }
    }

    .floatingLabel {
      transform: translateY(-125%) scale(0.75);
    }
  }

  .inputLabel {
    font-weight: 600;
    margin-bottom: $spacing-sm;
  }

  .buttonIcon {
    position: absolute;
    right: $spacing-xs;
    top: 50%;
    transform: translateY(-50%);

    &:hover button {
      color: $color-error;
    }
  }

  .inputMessage {
    display: flex;
    align-items: center;
    color: $color-grey-40;
    gap: $spacing-xs;
    background: inherit;
    border-radius: $border-radius-sm;
    bottom: 0;
    font: $text-body-xs;
    left: 0;
    margin: 0 $spacing-sm;
    padding: 0 $spacing-sm;
    position: absolute;
    // the negative y-offset is 50% of the line-height plus a bit extra for
    // visual balance in relation to the input border endings left and right
    transform: translateY(calc(100% - 0.85em));
  }

  &:has([aria-invalid="true"]) .inputMessage {
    color: $color-error;
  }
}
